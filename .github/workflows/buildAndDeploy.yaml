name: Deploy
on: deployment
jobs:
  build_job:
    runs-on: ubuntu-latest
    name: build dockers
    if: ${{ github.event.deployment.environment == 'cicd' }}
    steps:
      - name: set deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ github.event.deployment.id }}
          environment: cicd
          environment_url: https://${{ secrets.CICD_URL }}/hkube/dashboard-${{ github.event.deployment.payload.prName }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - run: npm ci
      - name: build
        run: PRIVATE_REGISTRY=docker.io/hkube npm run build
        env:
          TRAVIS_PULL_REQUEST: 'true'
          PR_NAME: ${{ github.event.deployment.payload.prName }}
      - name: install kubectl
        run: ./scripts/install.sh
      - name: deploy
        run: ./scripts/deploy-staging.sh
      - name: set deployment status to failure
        id: failed_deployment
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ github.event.deployment.id }}
          environment: cicd
          environment_url: https://${{ secrets.CICD_URL }}/hkube/dashboard-${{ github.event.deployment.payload.prName }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: failure
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
